name: Docker Image CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Docker Setup Buildx
        # You may pin to the exact commit or the version.
        # uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435
        uses: docker/setup-buildx-action@v3.11.1
    
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        uses: docker/login-action@v3.6.0
        with:
          # Username used to log against the Docker registry
          username: ${{ secrets.DOCKER_USERNAME }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.DOCKER_HUB }}
          # Specifies whether the given registry is ECR (auto, true or false)
          ecr: false
          # Log out from the Docker registry at the end of a job
          logout: true
          # Raw authentication to registries, defined as YAML objects
          # registry-auth: # optional

      - name: Build and push Docker images
      # You may pin to the exact commit or the version.
      # uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        uses: docker/build-push-action@v6.18.0
        with:
          # List of a customs host-to-IP mapping (e.g., docker:10.180.0.1)
          # add-hosts: # optional
          # List of extra privileged entitlement (e.g., network.host,security.insecure)
          # allow: # optional
          # List of annotation to set to the image
          # annotations: # optional
          # List of attestation parameters (e.g., type=sbom,generator=image)
          # attests: # optional
          # List of build-time variables
          # build-args: # optional
          # List of additional build contexts (e.g., name=path)
          # build-contexts: # optional
          # Builder instance
          # builder: # optional
          # List of external cache sources for buildx (e.g., user/app:cache, type=local,src=path/to/dir)
          # cache-from: # optional
          # List of cache export destinations for buildx (e.g., user/app:cache, type=local,dest=path/to/dir)
          # cache-to: # optional
          # Set method for evaluating build (e.g., check)
          # call: # optional
          # Optional parent cgroup for the container used in the build
          # cgroup-parent: # optional
          # Build's context is the set of files located in the specified PATH or URL
          context: .
          # Path to the Dockerfile
          file: ./Dockerfile-amd64
          # List of metadata for an image
          # labels: # optional
          # Load is a shorthand for --output=type=docker
          # load: # optional, default is false
          # Set the networking mode for the RUN instructions during build
          # network: # optional
          # Do not use cache when building the image
          # no-cache: # optional, default is false
          # Do not cache specified stages
          # no-cache-filters: # optional
          # List of output destinations (format: type=local,dest=path)
          # outputs: # optional
          # List of target platforms for build
          platforms: linux/amd64
          # Generate provenance attestation for the build (shorthand for --attest=type=provenance)
          # provenance: # optional
          # Always attempt to pull all referenced images
          # pull: # optional, default is false
          # Push is a shorthand for --output=type=registry
          push: true
          # Generate SBOM attestation for the build (shorthand for --attest=type=sbom)
          # sbom: # optional
          # List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)
          # secrets: # optional
          # List of secret env vars to expose to the build (e.g., key=envname, MY_SECRET=MY_ENV_VAR)
          # secret-envs: # optional
          # List of secret files to expose to the build (e.g., key=filename, MY_SECRET=./secret.txt)
          # secret-files: # optional
          # Size of /dev/shm (e.g., 2g)
          # shm-size: # optional
          # List of SSH agent socket or keys to expose to the build
          # ssh: # optional
          # List of tags
          tags: petrus79/pyhpsu_mqtt:latest
          # Sets the target stage to build
          # target: # optional
          # Ulimit options (e.g., nofile=1024:1024)
          # ulimit: # optional
          # GitHub Token used to authenticate against a repository for Git context
          # github-token: # optional, default is ${{ github.token }}
                
      #- name: Build the docker image
        #run: |
          #docker build . --file Dockerfile-amd64 --tag petrus79/pyhpsu_mqtt:amd64

      #- name: Push the docker image
        #run: |
          #docker push petrus79/pyhpsu_mqtt:amd64
